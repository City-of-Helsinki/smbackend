# Generated by Django 4.1.10 on 2023-10-17 07:45

import django.contrib.gis.db.models.fields
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Day",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(default=django.utils.timezone.now)),
                (
                    "weekday_number",
                    models.PositiveSmallIntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(7),
                        ],
                    ),
                ),
            ],
            options={
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="DayData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "ordering": ["-day__date"],
            },
        ),
        migrations.CreateModel(
            name="Hour",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "hour_number",
                    models.PositiveSmallIntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(23),
                        ],
                    ),
                ),
            ],
            options={
                "ordering": ["-day__date", "-hour_number"],
            },
        ),
        migrations.CreateModel(
            name="HourData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "ordering": ["-hour__day__date", "-hour__hour_number"],
            },
        ),
        migrations.CreateModel(
            name="ImportState",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "data_type",
                    models.CharField(
                        choices=[("AQ", "Air Quality"), ("WO", "Weather Observation")],
                        default="AQ",
                        max_length=2,
                    ),
                ),
                ("year_number", models.PositiveSmallIntegerField(default=2010)),
                (
                    "month_number",
                    models.PositiveSmallIntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(12),
                        ],
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Measurement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="Month",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "month_number",
                    models.PositiveSmallIntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(12),
                        ],
                    ),
                ),
            ],
            options={
                "ordering": ["-year__year_number", "-month_number"],
            },
        ),
        migrations.CreateModel(
            name="MonthData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "ordering": ["-year__year_number", "-month__month_number"],
            },
        ),
        migrations.CreateModel(
            name="Parameter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "data_type",
                    models.CharField(
                        choices=[("AQ", "Air Quality"), ("WO", "Weather Observation")],
                        default="AQ",
                        max_length=2,
                    ),
                ),
                ("name", models.CharField(max_length=32)),
                ("description", models.CharField(max_length=64, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Station",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "data_type",
                    models.CharField(
                        choices=[("AQ", "Air Quality"), ("WO", "Weather Observation")],
                        default="AQ",
                        max_length=2,
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("name_fi", models.CharField(max_length=64, null=True)),
                ("name_sv", models.CharField(max_length=64, null=True)),
                ("name_en", models.CharField(max_length=64, null=True)),
                ("location", django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ("geo_id", models.IntegerField()),
            ],
            options={
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="Week",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "week_number",
                    models.PositiveSmallIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(53),
                        ]
                    ),
                ),
            ],
            options={
                "ordering": ["-week_number"],
            },
        ),
        migrations.CreateModel(
            name="WeekData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "ordering": ["-week__week_number"],
            },
        ),
        migrations.CreateModel(
            name="Year",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("year_number", models.PositiveSmallIntegerField(default=2023)),
            ],
            options={
                "ordering": ["-year_number"],
            },
        ),
        migrations.CreateModel(
            name="YearData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "measurements",
                    models.ManyToManyField(
                        related_name="year_datas", to="environment_data.measurement"
                    ),
                ),
                (
                    "station",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="year_datas",
                        to="environment_data.station",
                    ),
                ),
                (
                    "year",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="year_datas",
                        to="environment_data.year",
                    ),
                ),
            ],
            options={
                "ordering": ["-year__year_number"],
            },
        ),
        migrations.AddIndex(
            model_name="year",
            index=models.Index(
                fields=["year_number"], name="environment_year_nu_1d4079_idx"
            ),
        ),
        migrations.AddField(
            model_name="weekdata",
            name="measurements",
            field=models.ManyToManyField(
                related_name="week_datas", to="environment_data.measurement"
            ),
        ),
        migrations.AddField(
            model_name="weekdata",
            name="station",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="week_datas",
                to="environment_data.station",
            ),
        ),
        migrations.AddField(
            model_name="weekdata",
            name="week",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="week_datas",
                to="environment_data.week",
            ),
        ),
        migrations.AddField(
            model_name="week",
            name="years",
            field=models.ManyToManyField(
                related_name="weeks", to="environment_data.year"
            ),
        ),
        migrations.AddField(
            model_name="station",
            name="parameters",
            field=models.ManyToManyField(
                related_name="stations", to="environment_data.parameter"
            ),
        ),
        migrations.AddField(
            model_name="monthdata",
            name="measurements",
            field=models.ManyToManyField(
                related_name="month_datas", to="environment_data.measurement"
            ),
        ),
        migrations.AddField(
            model_name="monthdata",
            name="month",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="month_datas",
                to="environment_data.month",
            ),
        ),
        migrations.AddField(
            model_name="monthdata",
            name="station",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="month_datas",
                to="environment_data.station",
            ),
        ),
        migrations.AddField(
            model_name="monthdata",
            name="year",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="month_datas",
                to="environment_data.year",
            ),
        ),
        migrations.AddField(
            model_name="month",
            name="year",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="months",
                to="environment_data.year",
            ),
        ),
        migrations.AddField(
            model_name="measurement",
            name="parameter",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="values",
                to="environment_data.parameter",
            ),
        ),
        migrations.AddField(
            model_name="hourdata",
            name="hour",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="hour_datas",
                to="environment_data.hour",
            ),
        ),
        migrations.AddField(
            model_name="hourdata",
            name="measurements",
            field=models.ManyToManyField(
                related_name="hour_datas", to="environment_data.measurement"
            ),
        ),
        migrations.AddField(
            model_name="hourdata",
            name="station",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="hour_datas",
                to="environment_data.station",
            ),
        ),
        migrations.AddField(
            model_name="hour",
            name="day",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="hours",
                to="environment_data.day",
            ),
        ),
        migrations.AddField(
            model_name="daydata",
            name="day",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="day_datas",
                to="environment_data.day",
            ),
        ),
        migrations.AddField(
            model_name="daydata",
            name="measurements",
            field=models.ManyToManyField(
                related_name="day_datas", to="environment_data.measurement"
            ),
        ),
        migrations.AddField(
            model_name="daydata",
            name="station",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="day_datas",
                to="environment_data.station",
            ),
        ),
        migrations.AddField(
            model_name="day",
            name="month",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="days",
                to="environment_data.month",
            ),
        ),
        migrations.AddField(
            model_name="day",
            name="week",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="days",
                to="environment_data.week",
            ),
        ),
        migrations.AddField(
            model_name="day",
            name="year",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="days",
                to="environment_data.year",
            ),
        ),
        migrations.AddIndex(
            model_name="yeardata",
            index=models.Index(fields=["year"], name="environment_year_id_5367a1_idx"),
        ),
        migrations.AddIndex(
            model_name="weekdata",
            index=models.Index(
                fields=["station", "week"], name="environment_station_1097e4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="monthdata",
            index=models.Index(
                fields=["station", "month"], name="environment_station_62c407_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="hourdata",
            index=models.Index(
                fields=["station", "hour"], name="environment_station_a052eb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="hour",
            index=models.Index(
                fields=["day", "hour_number"], name="environment_day_id_2eaccc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="daydata",
            index=models.Index(
                fields=["station", "day"], name="environment_station_2222b6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="day",
            index=models.Index(fields=["date"], name="environment_date_a4fc96_idx"),
        ),
    ]
