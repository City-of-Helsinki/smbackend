# Generated by Django 3.2.7 on 2021-10-12 09:52

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('weekday_number', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(7)])),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ImportState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rows_imported', models.PositiveIntegerField(default=0)),
                ('current_year_number', models.PositiveSmallIntegerField(choices=[(2020, 2020), (2021, 2021)], default=2020)),
                ('current_month_number', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Month',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month_number', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
            ],
            options={
                'ordering': ['-year__year_number', '-month_number'],
            },
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('geom', django.contrib.gis.db.models.fields.PointField(srid=3067)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Week',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_number', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(53)])),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weeks', to='eco_counter.station')),
            ],
            options={
                'ordering': ['-week_number'],
            },
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_number', models.PositiveSmallIntegerField(choices=[(2020, 2020), (2021, 2021)], default=2021)),
                ('station', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='years', to='eco_counter.station')),
            ],
            options={
                'ordering': ['-year_number'],
            },
        ),
        migrations.CreateModel(
            name='YearData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_ak', models.PositiveIntegerField(default=0)),
                ('value_ap', models.PositiveIntegerField(default=0)),
                ('value_at', models.PositiveIntegerField(default=0)),
                ('value_pk', models.PositiveIntegerField(default=0)),
                ('value_pp', models.PositiveIntegerField(default=0)),
                ('value_pt', models.PositiveIntegerField(default=0)),
                ('value_jk', models.PositiveIntegerField(default=0)),
                ('value_jp', models.PositiveIntegerField(default=0)),
                ('value_jt', models.PositiveIntegerField(default=0)),
                ('station', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='year_data', to='eco_counter.station')),
                ('year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='year_data', to='eco_counter.year')),
            ],
            options={
                'ordering': ['-year__year_number'],
            },
        ),
        migrations.CreateModel(
            name='WeekData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_ak', models.PositiveIntegerField(default=0)),
                ('value_ap', models.PositiveIntegerField(default=0)),
                ('value_at', models.PositiveIntegerField(default=0)),
                ('value_pk', models.PositiveIntegerField(default=0)),
                ('value_pp', models.PositiveIntegerField(default=0)),
                ('value_pt', models.PositiveIntegerField(default=0)),
                ('value_jk', models.PositiveIntegerField(default=0)),
                ('value_jp', models.PositiveIntegerField(default=0)),
                ('value_jt', models.PositiveIntegerField(default=0)),
                ('station', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='week_data', to='eco_counter.station')),
                ('week', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='week_data', to='eco_counter.week')),
            ],
            options={
                'ordering': ['-week__week_number'],
            },
        ),
        migrations.AddField(
            model_name='week',
            name='years',
            field=models.ManyToManyField(to='eco_counter.Year'),
        ),
        migrations.CreateModel(
            name='MonthData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_ak', models.PositiveIntegerField(default=0)),
                ('value_ap', models.PositiveIntegerField(default=0)),
                ('value_at', models.PositiveIntegerField(default=0)),
                ('value_pk', models.PositiveIntegerField(default=0)),
                ('value_pp', models.PositiveIntegerField(default=0)),
                ('value_pt', models.PositiveIntegerField(default=0)),
                ('value_jk', models.PositiveIntegerField(default=0)),
                ('value_jp', models.PositiveIntegerField(default=0)),
                ('value_jt', models.PositiveIntegerField(default=0)),
                ('month', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='month_data', to='eco_counter.month')),
                ('station', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='month_data', to='eco_counter.station')),
                ('year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='month_data', to='eco_counter.year')),
            ],
            options={
                'ordering': ['-year__year_number', '-month__month_number'],
            },
        ),
        migrations.AddField(
            model_name='month',
            name='station',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='months', to='eco_counter.station'),
        ),
        migrations.AddField(
            model_name='month',
            name='year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='months', to='eco_counter.year'),
        ),
        migrations.CreateModel(
            name='HourData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('values_ak', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), default=list, size=None)),
                ('values_ap', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), default=list, size=None)),
                ('values_at', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), default=list, size=None)),
                ('values_pk', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), default=list, size=None)),
                ('values_pp', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), default=list, size=None)),
                ('values_pt', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), default=list, size=None)),
                ('values_jk', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), default=list, size=None)),
                ('values_jp', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), default=list, size=None)),
                ('values_jt', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), default=list, size=None)),
                ('day', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hour_data', to='eco_counter.day')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hour_data', to='eco_counter.station')),
            ],
            options={
                'ordering': ['-day__date'],
            },
        ),
        migrations.CreateModel(
            name='DayData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_ak', models.PositiveIntegerField(default=0)),
                ('value_ap', models.PositiveIntegerField(default=0)),
                ('value_at', models.PositiveIntegerField(default=0)),
                ('value_pk', models.PositiveIntegerField(default=0)),
                ('value_pp', models.PositiveIntegerField(default=0)),
                ('value_pt', models.PositiveIntegerField(default=0)),
                ('value_jk', models.PositiveIntegerField(default=0)),
                ('value_jp', models.PositiveIntegerField(default=0)),
                ('value_jt', models.PositiveIntegerField(default=0)),
                ('day', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='day_data', to='eco_counter.day')),
                ('station', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='day_data', to='eco_counter.station')),
            ],
            options={
                'ordering': ['-day__date'],
            },
        ),
        migrations.AddField(
            model_name='day',
            name='month',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='days', to='eco_counter.month'),
        ),
        migrations.AddField(
            model_name='day',
            name='station',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='day', to='eco_counter.station'),
        ),
        migrations.AddField(
            model_name='day',
            name='week',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='days', to='eco_counter.week'),
        ),
        migrations.AddField(
            model_name='day',
            name='year',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='days', to='eco_counter.year'),
        ),
    ]
